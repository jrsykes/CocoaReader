Setting stuff up...
##################################################
Image input size:  586
Image resize applied
Initializing Datasets and Dataloaders...
Building model...
PhytNet_SRAutoencoder loaded
##################################################
Metrics to be calculated:  ['ESS', 'SR_loss', 'L1']
Epoch 0
----------
Patience: 20/20
train
Learning... |                                | 0/663/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/nn/modules/loss.py:535: UserWarning: Using a target size (torch.Size([42, 3, 586, 586])) that is different to the input size (torch.Size([42, 3, 620, 620])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
[?25hTraceback (most recent call last):
  File "/users/jrs596/scripts/CocoaReader/CocoaNet/PhyloNet_SR/Torch_Custom_CNNs2.2.1.py", line 180, in <module>
    train()
  File "/users/jrs596/scripts/CocoaReader/CocoaNet/PhyloNet_SR/Torch_Custom_CNNs2.2.1.py", line 142, in train
    _, best_loss, _, run_name, _, _ = train_model(args=args,
  File "/users/jrs596/scripts/CocoaReader/utils/training_loop_Phylo_SR.py", line 130, in train_model
    SR_loss = criterion(SRdecoded, SRinputs)/100000                                                      # weight to put on sensible scale
  File "/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 535, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/nn/functional.py", line 3328, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/users/jrs596/scratch/python_environments/envs/torch5/lib/python3.10/site-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (620) must match the size of tensor b (586) at non-singleton dimension 3